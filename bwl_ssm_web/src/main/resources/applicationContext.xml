<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	
	<!-- 开启注解扫描，管理service和dao -->
	<context:component-scan base-package="com.bwl.service"/>
	<context:component-scan base-package="com.bwl.mapper"/>
	<context:property-placeholder location="classpath:db.properties"/>
	<!-- 配置连接池 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
   		<property name="driverClass" value="${jdbc.driver}" />
   		<property name="jdbcUrl" value="${jdbc.url}" />
   		<property name="user" value="${jdbc.username}" />
   		<property name="password" value="${jdbc.password}" />
   	</bean>	
	<!-- 把交给IOC管理 SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
   		<property name="dataSource" ref="dataSource" />
   		<!-- 传入PageHelper的插件-->
   		<property name="plugins">
   			<array>
   				
   				<bean class="com.github.pagehelper.PageInterceptor">
   					<property name="properties">
   						<props>
   							<prop key="helperDialect">mysql</prop>
   							<prop key="reasonable">true</prop>
   						</props>
   					</property>
   				</bean>
   			</array>
   		</property>

   	</bean>
	
	<!-- 扫描dao接口 -->
	<bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
   		<property name="basePackage" value="com.bwl.mapper"/>
   	</bean>
	
	<!-- 配置Spring的声明式事务管理 -->
	<!-- 配置事务管理器 -->
   	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
   		<property name="dataSource" ref="dataSource"/>
   	</bean>

  <tx:annotation-driven transaction-manager="transactionManager"/>


	<!-- 配置shiro框架的过滤器工厂bean -->
	<bean id="shiroFilter"
		  class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/index.jsp" />
		<property name="successUrl" value="/successUrl.jsp" />
		<!-- 指定URL拦截策略 ,静态资源放行，登录放行，其他的需要认证也就是登录-->
		<property name="filterChainDefinitions">
			<value>
				/css/**=anon
				/js/**=anon
				/images/**=anon
				/index.jsp=anon
				/user/login=anon
				<!--/user/login.jsp=anon-->
				<!--用户退出的url-->
				/logout.action = logout
				/**=authc
			</value>
		</property>
	</bean>
	<!-- 配置安全管理器 -->
	<bean id="securityManager"
		  class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="userRealm" />
		<!-- 注入缓存管理器 -->
		<!--<property name="cacheManager" ref="cacheManager" />-->
	</bean>
	<!-- 注册自定义realm -->
	<bean id="userRealm"
		  class="com.bwl.controller.UserRealm" >
		<!-- 凭证匹配器 -->
		<property name="credentialsMatcher">
			<bean
					class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
				<property name="hashAlgorithmName" value="MD5" />
				<property name="hashIterations" value="1" />
			</bean>
		</property>

	</bean>
	<!-- 注册缓存管理器 -->
	<!--<bean id="cacheManager"
		  class="org.apache.shiro.cache.ehcache.EhCacheManager">
		&lt;!&ndash; 注入ehcache配置文件 &ndash;&gt;
		<property name="cacheManagerConfigFile"
				  value="classpath:ehcache.xml" />
	</bean>-->
	<!-- 开启shiro注解加到springmvc.xml中去了，因为不加那里会导致注解失效 -->
	<!-- 1.配置lifecycleBeanPostProcessor，可以在Spring IOC容器中调用shiro的生命周期方法. -->
	<bean class="org.apache.shiro.spring.LifecycleBeanPostProcessor"
		  id="lifecycleBeanPostProcessor" />

	<!-- 2.启用Spring IOC容器Shiro注解，但必须配置了lifecycleBeanPostProcessor后才可以使用 -->
	<bean
			class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
			depends-on="lifecycleBeanPostProcessor" />

	<!-- 3.开启Spring AOC Shiro注解支持 -->
	<bean
			class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>



	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 配置角色出错界面-->
				<prop key="org.apache.shiro.authz.UnauthorizedException">UnauthorizedException</prop>
				<prop key="org.apache.shiro.authz.UnauthenticatedException">UnauthenticatedException</prop>
			</props>
		</property>
	</bean>
	
</beans>













